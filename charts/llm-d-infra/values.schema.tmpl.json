{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "auth": {
      "additionalProperties": false,
      "properties": {
        "hf_token": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "secretKey": {
              "default": "HF_TOKEN",
              "required": [],
              "title": "secretKey",
              "type": "string"
            },
            "secretName": {
              "default": "llm-d-hf-token",
              "required": [],
              "title": "secretName",
              "type": "string"
            }
          },
          "required": [],
          "title": "hf_token",
          "type": "object"
        }
      },
      "required": [],
      "title": "auth",
      "type": "object"
    },
    "clusterDomain": {
      "default": "cluster.local",
      "description": "Default Kubernetes cluster domain",
      "required": [],
      "title": "clusterDomain"
    },
    "common": {
      "additionalProperties": true,
      "description": "Parameters for bitnami.common dependency",
      "required": [],
      "title": "common"
    },
    "commonAnnotations": {
      "additionalProperties": true,
      "description": "Annotations to add to all deployed objects",
      "required": [],
      "title": "commonAnnotations"
    },
    "commonLabels": {
      "additionalProperties": true,
      "description": "Labels to add to all deployed objects",
      "required": [],
      "title": "commonLabels"
    },
    "extraDeploy": {
      "description": "Array of extra objects to deploy with the release",
      "items": {
        "required": [],
        "type": [
          "string",
          "object"
        ]
      },
      "required": [],
      "title": "extraDeploy"
    },
    "fullnameOverride": {
      "default": "",
      "description": "String to fully override common.names.fullname",
      "required": [],
      "title": "fullnameOverride"
    },
    "gateway": {
      "additionalProperties": false,
      "default": "See below",
      "description": "Gateway configuration",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Additional annotations provided to the Gateway resource",
          "required": [],
          "title": "annotations"
        },
        "destinationRule": {
          "additionalProperties": true,
          "description": "see: https://istio.io/latest/docs/reference/config/networking/destination-rule/",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "exportTo": {
              "description": "Optional: Control which namespaces can access this DestinationRule",
              "items": {
                "required": []
              },
              "required": [],
              "title": "exportTo",
              "type": "array"
            },
            "host": {
              "default": "localhost",
              "required": [],
              "title": "host",
              "type": "string"
            },
            "subsets": {
              "description": "Optional: Define subsets for versioned routing (e.g., by labels)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "subsets",
              "type": "array"
            },
            "trafficPolicy": {
              "additionalProperties": true,
              "description": " additionalProperties: true @schema Optional: Apply a mesh-wide traffic policy",
              "required": [],
              "title": "trafficPolicy"
            },
            "workloadSelector": {
              "additionalProperties": true,
              "description": " additionalProperties: true @schema Optional: Apply only to specific workloads (via selector labels)",
              "required": [],
              "title": "workloadSelector"
            }
          },
          "required": [],
          "title": "destinationRule"
        },
        "enabled": {
          "default": "true",
          "description": "Deploy resources related to Gateway",
          "required": [],
          "title": "enabled"
        },
        "fullnameOverride": {
          "default": "",
          "description": "String to fully override gateway.fullname",
          "required": [],
          "title": "fullnameOverride"
        },
        "gatewayClassName": {
          "default": "istio",
          "description": "Gateway class that determines the backend used Currently supported values: \"kgateway\", \"istio\", or \"gke-l7-regional-external-managed\"",
          "required": [],
          "title": "gatewayClassName"
        },
        "gatewayParameters": {
          "additionalProperties": false,
          "description": "Special parameters applied to kGateway via GatewayParameters resource",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "logLevel": {
              "default": "info",
              "description": " default: info enum: [error,warn,info,debug] @schema",
              "enum": [
                "error",
                "warn",
                "info",
                "debug"
              ],
              "required": [],
              "title": "logLevel"
            },
            "resources": {
              "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements",
              "description": "Resource requests/limits \u003cbr /\u003e Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-requests-and-limits-of-pod-and-container",
              "required": []
            }
          },
          "required": [],
          "title": "gatewayParameters",
          "type": "object"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Additional labels provided to the Gateway resource",
          "required": [],
          "title": "labels"
        },
        "listeners": {
          "description": "Set of listeners exposed via the Gateway, also propagated to the Ingress if enabled",
          "items": {
            "additionalProperties": false,
            "properties": {
              "allowedRoutes": {
                "additionalProperties": true,
                "description": "AllowedRoutes defines the types of routes that MAY be attached to a Listener and the trusted namespaces where those Route resources MAY be present.",
                "required": [],
                "type": "object"
              },
              "name": {
                "description": "Name is the name of the Listener. This name MUST be unique within a Gateway.",
                "required": [],
                "type": "string"
              },
              "path": {
                "description": "Path to expose via Ingress.",
                "required": [],
                "type": "string"
              },
              "port": {
                "description": "Port is the network port. Multiple listeners may use the same port (subject to compatibility rules).",
                "maximum": 65535,
                "minimum": 1,
                "required": [],
                "type": "integer"
              },
              "protocol": {
                "description": "Protocol specifies the network protocol this listener expects to receive.",
                "required": [],
                "type": "string"
              }
            },
            "required": [
              "port",
              "protocol"
            ],
            "type": "object"
          },
          "minItems": 1,
          "required": [],
          "title": "listeners",
          "type": "array"
        },
        "nameOverride": {
          "default": "",
          "description": "String to partially override gateway.fullname",
          "required": [],
          "title": "nameOverride"
        },
        "serviceType": {
          "default": "LoadBalancer",
          "description": "Gateway's service type. Ingress is only available if the service type is set to NodePort. Accepted values: [\"LoadBalancer\", \"NodePort\"]",
          "required": [],
          "title": "serviceType"
        }
      },
      "required": [],
      "title": "gateway"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "ingress": {
      "additionalProperties": false,
      "default": "See below",
      "description": "Ingress configuration",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Additional annotations for the Ingress resource",
          "required": [],
          "title": "annotations"
        },
        "clusterRouterBase": {
          "default": "",
          "description": "used as part of the host derivation if not specified from OCP cluster domain (don't edit)",
          "required": [],
          "title": "clusterRouterBase"
        },
        "enabled": {
          "default": "true",
          "description": "Deploy Ingress",
          "required": [],
          "title": "enabled"
        },
        "extraHosts": {
          "description": "List of additional hostnames to be covered with this ingress record (e.g. a CNAME) \u003c!-- E.g. extraHosts:   - name: llm-d.env.example.com     path: / (Optional)     pathType: Prefix (Optional)     port: 7007 (Optional) --\u003e",
          "items": {
            "required": []
          },
          "required": [],
          "title": "extraHosts"
        },
        "extraTls": {
          "description": "The TLS configuration for additional hostnames to be covered with this ingress record. \u003cbr /\u003e Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls \u003c!-- E.g. extraTls:   - hosts:     - llm-d.env.example.com     secretName: llm-d-env --\u003e",
          "items": {
            "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.networking.v1.IngressTLS",
            "required": []
          },
          "required": [],
          "title": "extraTls"
        },
        "host": {
          "default": "",
          "description": "Hostname to be used to expose the NodePort service to the inferencing gateway",
          "required": [],
          "title": "host"
        },
        "ingressClassName": {
          "default": "",
          "description": "Name of the IngressClass cluster resource which defines which controller will implement the resource (e.g nginx)",
          "required": [],
          "title": "ingressClassName"
        },
        "path": {
          "default": "/",
          "description": "Path to be used to expose the full route to access the inferencing gateway",
          "required": [],
          "title": "path"
        },
        "tls": {
          "additionalProperties": false,
          "description": "Ingress TLS parameters",
          "properties": {
            "enabled": {
              "default": "false",
              "description": "Enable TLS configuration for the host defined at `ingress.host` parameter",
              "required": [],
              "title": "enabled"
            },
            "secretName": {
              "default": "",
              "description": "The name to which the TLS Secret will be called",
              "required": [],
              "title": "secretName"
            }
          },
          "required": [],
          "title": "tls"
        }
      },
      "required": [],
      "title": "ingress"
    },
    "kubeVersion": {
      "default": "",
      "description": "Override Kubernetes version",
      "required": [],
      "title": "kubeVersion"
    },
    "nameOverride": {
      "default": "",
      "description": "String to partially override common.names.fullname",
      "required": [],
      "title": "nameOverride"
    }
  },
  "required": [],
  "type": "object"
}
